image: docker:latest
services:
- docker:dind

variables:
  DOCKER_DRIVER: overlay

stages:
- build
- test

noark5tester:
  stage: test
  variables:
    baseurl: "http://localhost:8092/noark5v5/"
  image: debian:buster
  allow_failure: false
  before_script:
  - apt update
  - apt install -y git maven curl python python-mechanize
  - git clone https://github.com/petterreinholdtsen/noark5-tester
  script:
  - atexit() { if [ "$serverpid" ]; then kill $serverpid; sleep 1; fi }
  - trap atexit EXIT
  - mvn spring-boot:run > build-run.log 2>&1 &
  - serverpid=$!
  - echo "Waiting for nikita to start"
  - count=0; while ! curl --silent $baseurl && [ 10 -gt "$count" ]; do sleep 20; printf "."; count=$(($count + 1)); done
  - (cd noark5-tester && LC_ALL=C.UTF-8 ./runtest --verbose --baseurl $baseurl)
  artifacts:
    paths:
    - build-run.log

maven-build:
  before_script:
  - apt-get update
  # - apt-get install mvn
  #  - apt-get install -y openjfx
  image: maven:3.6.1-jdk-11
  stage: build
  script:
  - "mvn package -B"
  - "mvn test"
  artifacts:
    paths:
    - target/*.jar

dast:
  stage: test
  image: registry.gitlab.com/gitlab-org/security-products/zaproxy
  variables:
    website: "https://example.com"
  allow_failure: false
  script:
  - mkdir /zap/wrk/
  - /zap/zap-baseline.py -h || true
  - /zap/zap-baseline.py -w gl-dast-report.md -t $website || true
  - cp /zap/wrk/gl-dast-report.md .
  artifacts:
    paths: [gl-dast-report.md]

dependency_scanning:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
  - docker:stable-dind
  script:
  - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
  - docker run
      --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
      --volume "$PWD:/code"
      --volume /var/run/docker.sock:/var/run/docker.sock
      "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
