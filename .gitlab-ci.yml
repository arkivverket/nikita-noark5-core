image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - use
  - deploy

include:
  - template: Code-Quality.gitlab-ci.yml

noark5tester-runtest:
  stage: test
  variables:
    baseurl: "http://localhost:8092/noark5v5/"
  image: debian:buster
  allow_failure: false
  before_script:
    - apt update
    - apt install -y git maven curl python3 unoconv pytz
    - git clone https://github.com/petterreinholdtsen/noark5-tester
  script:
    - atexit() { if [ "$serverpid" ]; then echo "stopping nikita"; kill $serverpid; sleep 1; if ! $nikitastarted ; then tail -100 nikita-run.log ; fi; fi }
    - trap atexit EXIT
    - mvn spring-boot:run > nikita-run.log 2>&1 &
    - serverpid=$!
    - echo "Waiting for nikita to start"
    - echo "baseurl is set to $baseurl"
    - count=0; while ! curl --silent $baseurl && [ 10 -gt "$count" ]; do sleep 20; printf "."; count=$(($count + 1)); done; if [ 10 -gt "$count" ]; then nikitastarted=true; else echo "Failed to start nikita"; tail -100 nikita-run.log; exit 1; fi
    - (cd noark5-tester && LC_ALL=C.UTF-8 ./runtest --baseurl $baseurl)
  artifacts:
    paths:
      - nikita-run.log

noark5tester-inoutin:
  stage: use
  variables:
    baseurl: "http://localhost:8092/noark5v5/"
  image: debian:buster
  allow_failure: false
  before_script:
    - apt update
    - apt install -y git maven curl python3 python3-tz  python3-lxml jq python3-dateutil python3-stdnum
    - apt install -y libxml2-utils
    - git clone https://github.com/petterreinholdtsen/noark5-tester
  script:
    - nikitastarted=false
    - atexit() { if [ "$serverpid" ]; then echo "stopping nikita"; kill $serverpid; sleep 1; if ! $nikitastarted ; then tail -100 nikita-run.log ; fi; fi }
    - trap atexit EXIT
    - mvn spring-boot:run > nikita-run.log 2>&1 &
    - serverpid=$!
    - echo "Waiting for nikita to start"
    - count=0; while ! curl --silent $baseurl && [ 10 -gt "$count" ]; do sleep 20; printf "."; count=$(($count + 1)); done; if [ 10 -gt "$count" ]; then nikitastarted=true; else echo "Failed to start nikita"; tail -100 nikita-run.log; exit 1; fi
    - cd noark5-tester
    - export LC_ALL=C.UTF-8
    - ./runtest  --baseurl $baseurl --keep
    - ./export-all --baseurl $baseurl --verbose
    - firstseries=$(jq -r '.results []._links.self.href' json-dump-*/api/arkivstruktur/arkivdel.json | head -1)
    - ./import-email --verbose --baseurl $baseurl --saksmappe --mbox testdata/nikita-noark.mbox --storageurl "$firstseries" --maxinserts 10
    - ./export-all --baseurl $baseurl --xml --verbose
    - find uttrekk-*
    - depotdir="$(dirname "$(ls uttrekk-*/*/arkivstruktur.xml | head -1)")"
    - echo "Trying to load data from $depotdir"
    - ./import-uttrekk --baseurl $baseurl "$depotdir" --verbose
    - (cd "$depotdir"; xmllint --noout  --schema arkivstruktur.xsd arkivstruktur.xml) > nikita-xml-validation-report.txt 2>&1 || true
  artifacts:
    paths:
      - nikita-run.log
      - noark5-tester/json-dump-*/*
      - noark5-tester/uttrekk-*/*
      - noark5-tester/nikita-xml-validation-report.txt

maven-build:
  before_script:
    - apt-get update
    - apt install -y unoconv
  image: maven:3.6.1-jdk-11
  stage: build
  script:
    - "mvn package -B"
    - "mvn test"
  artifacts:
    paths:
      - target/*.jar
      - target/generate*/**

code_quality:
  stage: test
  artifacts:
    expose_as: 'Code Quality Report'
    paths: [ gl-code-quality-report.json ]

docker-build-master:
  before_script:
    - apt-get update
  image: maven:3.6.1-jdk-11
  stage: deploy
  script:
    - mvn compile jib:build -Djib.to.image=registry.hub.docker.com/oslometabi/nikita-noark5-core:latest -Djib.to.auth.username=$DOCKER_HUB_USER -Djib.to.auth.password=$DOCKER_HUB_PASSWORD
  only:
    - master
